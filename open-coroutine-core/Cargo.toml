[package]
name = "open-coroutine-core"
version = "0.5.0"
edition = "2021"
authors = ["zhangzicheng@apache.org"]
description = "The open-coroutine is a simple, efficient and generic coroutine library."
repository = "https://github.com/acl-dev/open-coroutine"
keywords = ["runtime", "coroutine", "hook", "preempt", "work-steal"]
categories = ["concurrency", "asynchronous", "os", "network-programming", "wasm"]
license = "LGPL-3.0 OR Apache-2.0"
readme = "../README.md"

[dependencies]
# log
log = { version = "0.4.20", optional = true }
simplelog = { version = "0.12.1", optional = true }
# common
cfg-if = "1.0.0"
# coroutine
corosensei = { version = "0.1.4", optional = true }
uuid = { version = "1.3.0", features = [
    "v4",
    "fast-rng",
    "macro-diagnostics",
] }
dashmap = "5.5.3"
# scheduler
once_cell = "1.18.0"
open-coroutine-timer = { version = "0.5.0", path = "../open-coroutine-timer" }
open-coroutine-queue = { version = "0.5.0", path = "../open-coroutine-queue" }
# coroutine pool
crossbeam-deque = "0.8.3"
# monitor
core_affinity = "0.8.1"
# net
crossbeam-utils = { version = "0.8.16", optional = true }
num_cpus = { version = "1.16.0", optional = true }
polling = { version = "2.8.0", optional = true }
open-coroutine-iouring = { version = "0.1.0", path = "../open-coroutine-iouring", optional = true }

[target.'cfg(unix)'.dependencies]
# coroutine
libc = "0.2.150"
nix = { version = "0.27.1", features = ["signal"] }

[target.'cfg(windows)'.dependencies]
# common
windows-sys = { version = "0.52.0", features = [
    "Win32_Foundation",
    "Win32_System_Kernel",
    "Win32_System_Threading",
    "Win32_System_SystemInformation",
    "Win32_System_Diagnostics_Debug",
] }

[dev-dependencies]
backtrace = "0.3.69"

[features]
default = ["full"]

# Print some help log.
# Enable for default.
logs = ["log", "simplelog"]

korosensei = ["corosensei", "nix/pthread"]

# Provide preemptive scheduling implementation.
# Enable for default.
preemptive-schedule = ["korosensei"]

# Provide net API abstraction and implementation.
net = ["korosensei", "num_cpus", "crossbeam-utils", "polling"]

# Provide io_uring abstraction and implementation.
# This feature only works in linux.
io_uring = ["net", "open-coroutine-iouring"]

# Provide syscall implementation.
syscall = ["net"]

# Enable all features
full = ["syscall", "preemptive-schedule", "io_uring", "logs"]
